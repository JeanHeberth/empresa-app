name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    types: [ opened, reopened, synchronize ]
    branches:
      - main

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      - name: Install dependencies
        run: npm install

  #  test:
  #    runs-on: ubuntu-latest
  #    needs: install
  #    steps:
  #      - uses: actions/checkout@v3
  #      - name: Set up Node.js
  #        uses: actions/setup-node@v3
  #        with:
  #          node-version: '18.x'
  #      - name: Install dependencies
  #        run: npm ci
  #      - name: Run tests
  #        run: npm test

  build:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Install mailjet_rest
        run: pip install mailjet-rest
      - name: Install dependencies
        run: npm ci
      - name: Build the project
        run: npm run build

  notify:
    runs-on: ubuntu-latest
    needs: build
    env:
      MAILJET_API_KEY: ${{ secrets.MAILJET_API_KEY }}
      MAILJET_SECRET_KEY: ${{ secrets.MAILJET_SECRET_KEY }}
      TO_EMAIL: 'jeanheberth@souzavieira.com'
      FROM_EMAIL: 'noreply@souzavieira.com'
    steps:
      - name: Send email notification
        run: |
          echo "Sending email notification..."
          python3 -m pip install mailjet_rest
          python3 - <<EOF
          import os
          from mailjet_rest import Client

          mailjet = Client(
              auth=(os.environ.get('MAILJET_API_KEY'), os.environ.get('MAILJET_SECRET_KEY')),
              version='v3.1'
          )

          data = {
              'Messages': [
                  {
                      'From': {
                          'Email': os.environ.get('FROM_EMAIL'),
                          'Name': 'N/A'
                      },
                      'To': [
                          {
                              'Email': os.environ.get('TO_EMAIL'),
                              'Name': 'N/A'
                          }
                      ],
                      'Subject': f"New Pull Request in {os.environ.get('GITHUB_REPOSITORY')}",
                      'TextPart': f"Pull Request Title: ${{ github.event.pull_request.title }}\nURL: ${{ github.event.pull_request.html_url }}\nOpened by: ${{ github.event.pull_request.user.login }}",
                      'HTMLPart': f"Pull Request Title: ${{ github.event.pull_request.title }}\nURL: ${{ github.event.pull_request.html_url }}\nOpened by: ${{ github.event.pull_request.user.login }}"
                  }
              ]
          }

          response = mailjet.send.create(data=data)
          print(response.status_code)
          print(response.json())
          EOF
