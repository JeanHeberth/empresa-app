name: CI Pipeline

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: npm install

#  test:
#    runs-on: ubuntu-latest
#    needs: install
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Set up Node.js
#        uses: actions/setup-node@v3
#        with:
#          node-version: '18.x'
#
#      - name: Install dependencies
#        run: npm ci
#
#      - name: Run tests
#        run: npm test

#  lint:
#    runs-on: ubuntu-latest
#    needs: install
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Set up Node.js
#        uses: actions/setup-node@v3
#        with:
#          node-version: '18.x'
#
#      - name: Install dependencies
#        run: npm ci
#
#      - name: Run lint
#        run: npm run lint

  build:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: npm ci

      - name: Build the project
        run: npm run build

  notify:
    runs-on: ubuntu-latest
    needs: [ build]
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install mailjet_rest
        run: pip install mailjet-rest

      - name: Send email notification
        env:
          MAILJET_API_KEY: ${{ secrets.MAILJET_API_KEY }}
          MAILJET_SECRET_KEY: ${{ secrets.MAILJET_SECRET_KEY }}
          TO_EMAIL: 'jeanheberth@souzavieira.com'
          FROM_EMAIL: 'noreply@souzavieira.com'
          REPO_NAME: ${{ github.repository }}
          PR_TITLE: ${{ github.event.pull_request.title }}
          PR_URL: ${{ github.event.pull_request.html_url }}
          PR_USER: ${{ github.event.pull_request.user.login }}
        run: |
            echo "Sending email notification..."
            cat <<EOF > send_email.py
            import os
            from mailjet_rest import Client

            mailjet = Client(
                auth=(os.environ.get('MAILJET_API_KEY'), os.environ.get('MAILJET_SECRET_KEY')),
                version='v3.1'
            )

            data = {
                'Messages': [
                    {
                        'From': {
                            'Email': os.environ.get('FROM_EMAIL'),
                            'Name': 'N/A'
                        },
                        'To': [
                            {
                                'Email': os.environ.get('TO_EMAIL'),
                                'Name': 'N/A'
                            }
                        ],
                        'Subject': f"New Pull Request in {os.environ.get('REPO_NAME')}",
                        'TextPart': f"Pull Request Title: {os.environ.get('PR_TITLE')}\nURL: {os.environ.get('PR_URL')}\nOpened by: {os.environ.get('PR_USER')}",
                        'HTMLPart': f"Pull Request Title: {os.environ.get('PR_TITLE')}\nURL: {os.environ.get('PR_URL')}\nOpened by: {os.environ.get('PR_USER')}"
                    }
                ]
            }

            response = mailjet.send.create(data=data)
            print(response.status_code)
            print(response.json())
            EOF

          python3 send_email.py
